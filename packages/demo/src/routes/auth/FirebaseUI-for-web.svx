<script lang="ts">
  import { getAuth, signInAnonymously } from 'firebase/auth';
  import { logOut, FirebaseUiAuth, updateUserData, getFirebaseApp } from 'sveltefirets';
  import { firebaseConfig } from '$lib/firebaseConfig';
  import { user } from '$lib/user';
  import { Story } from 'kitbook';
  import Button from 'svelte-pieces/ui/Button.svelte';
</script>

<!-- prettier-ignore -->
# Authentication

The easiest method is to use the FirebaseUiAuth component that brings in [FirebaseUI web](https://github.com/firebase/firebaseui-web) and the Firebase 9 compat library via CDN when component mounted.

{#if $user}
  You are logged in and here is your **User** document from Firestore:

  <pre>{JSON.stringify($user, null, 1)}</pre>
  <Button form="filled" onclick={logOut}>Log Out</Button>
{:else}
  <!-- <Story>
    <Button
      onclick={() => {
        const auth = getAuth(getFirebaseApp());
        signInAnonymously(auth);
      }}>
      Log In Anonymously using just Firebase
    </Button>
  </Story> -->

  It also includes support for 42 languages and dialects out
  of the box. Spanish is demoed here and you can also try English with `en` and Arabic (RTL) with
  `ar`.

  <Story knobs={{ languageCode: 'es', show: true }} let:props={{ languageCode, show }}>
    {#if show}
      {#key languageCode}
        <FirebaseUiAuth
          {languageCode}
          signInWith={{ google: true, emailPasswordless: true, anonymous: true }}
          {firebaseConfig}
          on:updateuserdata={(e) => updateUserData(e.detail.user, e.detail.isNewUser)} />
      {/key}
    {/if}
  </Story>

  <Story name="Arabic RTL" knobs={{ languageCode: 'ar', show: false }} let:props={{ languageCode, show }}>
    {#if show}
      {#key languageCode}
        <FirebaseUiAuth
          {languageCode}
          signInWith={{ google: true, emailPasswordless: true, anonymous: true }}
          {firebaseConfig}
          on:updateuserdata={(e) => updateUserData(e.detail.user, e.detail.isNewUser)} />
      {/key}
    {/if}
  </Story>
{/if}
